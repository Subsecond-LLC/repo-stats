# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules

type GithubProfile @model @auth(rules: [{ allow: public, provider: iam }]) {
  githubName: String!
  email: String!
  bearerToken: String!
}

type RepoStats @model @auth(rules: [{ allow: public, provider: iam }]){
  repoName: String! @primaryKey
  lastGeneratedBy: String!
  lastGeneratedAt: String!
  longestVariableNames: [String!]!
  mostLinesFunctions: [FunctionLineLength!]!
  averageLinesFunction: Float!
  numberOfFunctions: Int!
  mostLinesFiles: [FileLineLength!]!
  numberOfFiles: Int!
  numberOfLines: Int!
  numberOfTopLevelStatements: Int!
  numberOfImportDeclarations: Int!
  numberOfExportDeclarations: Int!
  mostUsedVariables: [VariableUsage!]!
  numberOfAnonymousFunctions: Int!
  numberOfFunctionsWithReturn: Int!
  numberOfAsyncFunctions: Int!
  numberOfStatements: Statements!
  numberOfBinaryOperators: BinaryOperators!
  numberOfJSXElements: Int!
  numberOfJSXAttributes: Int!
  numberOfDivs: Int!
}

type FunctionLineLength {
  functionName: String!
  lineLength: Int!
}

type FileLineLength {
  fileName: String!
  lineLength: Int!
}

type VariableUsage {
  variableName: String!
  timesUsed: Int!
}

type Statements {
  ifStatements: Int!
  ifElseStatements: Int!
  elseStatements: Int!
  forStatements: Int!
  forInStatements: Int!
  forOfStatements: Int!
  whileStatements: Int!
  doWhileStatements: Int!
  switchStatements: Int!
  conditionalStatements: Int!
}

type BinaryOperators {
  equalEqual: Int!
  equalEqualEqual: Int!
  lessThan: Int!
  lessThanEqual: Int!
  greaterThan: Int!
  greaterThanEqual: Int!
  notEqual: Int!
  notEqualEqual: Int!
  plus: Int!
  minus: Int!
  times: Int!
  divide: Int!
}

type Mutation {
  githubOauth(code: String!): GithubProfile @function(name: "githubOauth-${env}") @auth(rules: [{ allow: public, provider: iam }])
}
